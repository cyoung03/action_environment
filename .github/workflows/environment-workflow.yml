name: build-test-deploy_environments
on:
  workflow_dispatch:
  
env:
  # Set Node.js Version
  NODE_VERSION: '18.x'

jobs:
  install-build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Node.js 
      uses: actions/setup-node@v3
      with:
        node-version: ${{env.NODE_VERSION}}
        cache: 'npm'

    - name: Install, Build, Test
      run: | 
        npm ci
        npm run build --if-present
        npm test 

  stage_deploy:
    runs-on: ubuntu-latest
    needs: install-build-test
    environment:
      name: staging

    steps:
      # Simulate a Deployment
      - name: Deploy to Staging
        run: |
         echo "Deployed to staging environment"

  production_deploy:
    runs-on: ubuntu-latest
    needs: stage_deploy
    environment:
      name: production

    steps:
      # Simulate a Deployment
      - name: Deploy to Production
        run: |
         echo "Deployed to production environment"


## Kubernetes environment setup
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     environment: Production
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Deploy to Kubernetes
#         uses: azure/k8s-deploy@v4
#         with:
#           manifests: |
#             kubernetes/deployment.yaml
#             kubernetes/service.yaml
#           namespace: 'my-app'

## secrets example
# name: My Workflow
# on:
#   push:
# jobs:
#   my_job:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Some step
#         with: # Secret set as an input
#           my_secret: ${{secrets.MY_SECRET}}
#       - name: Use my API key
#         env: # Secret set as an environment variable
#           API_KEY: ${{ secrets.API_KEY }}
#         run: docker build --build-arg=BLOG_API_KEY=${API_KEY} backend-image .